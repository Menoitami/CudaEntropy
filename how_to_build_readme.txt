Полный гайд по сборке CUDA проекта с Git
Введение

В этом руководстве описаны пошаговые действия для сборки CUDA-проекта, даже если вы не знакомы с Git, 
CMake и сборкой программ. Мы объясним все простым языком и проведем вас через каждый этап.
Что потребуется:

    CUDA Toolkit: Нужен для компиляции программ на CUDA.
        Убедитесь, что вы установили CUDA Toolkit с компилятором NVCC.
        Скачать можно по ссылке https://developer.nvidia.com/cuda-downloads

    CMake: Инструмент для настройки сборки проектов.
        Скачать можно по ссылке https://cmake.org/download/
    Компилятор C++:
        Для Windows: Установите Visual Studio 2022 (включая компонент "Desktop development with C++").
	скачать можно здесь https://visualstudio.microsoft.com/ru/vs/, стандарт С++ 17 и выше.

    Git: Инструмент для работы с репозиториями.
        Скачать можно по ссылке https://git-scm.com/downloads

Шаги по установке и сборке проекта
1. Склонировать репозиторий с GitHub

    Откройте терминал (или командную строку):
        Windows: Нажмите Win+R, введите cmd, нажмите Enter.
       
    Склонируйте проект с GitHub:s

	git clone https://github.com/Menoitami/CudaEntropy.git

    Если не знаете, как работать с Git, просто скопируйте команду выше и вставьте в терминал. Это скачает
 все файлы проекта в папку CudaEntropy.

Если вы скачали архив с git, то нужно разархивировать проект

Перейдите в папку проекта:
	
	Например: cd C:\progs\cpp\Entropy\CudaEntropy
	
	или, если вы использовали git.

	cd CudaEntropy

2. Установить CUDA Toolkit (если ещё не установлен)

    Для проверки установки выполните:

	nvcc --version

    Если команда не работает, вам нужно установить CUDA Toolkit.

    Инструкция по установке CUDA.

3. Установить CMake (если ещё не установлен)

    Скачайте CMake с официального сайта.
    Убедитесь, что CMake добавлен в переменную среды PATH (обычно это происходит автоматически).

Проверьте установку командой:

	cmake --version

4. Настройка проекта для сборки

    Создайте папку build внутри проекта:

	mkdir build
	cd build

Сгенерируйте файлы сборки:

	cmake ..

   Если выдает ошибку, наверняка это либо не установленный CUDA или Cmake, либо неправильный 
автоматический генератор файлов.Чтобы его изменить нужно ввести команду:

	cmake --help

   В разделе "Generators" посмотреть какие генераторы есть на компьютере. Рекомендуется использовать 
Visual Studio выше или равной 17 версии.
Далее нужно будет ввести название данного генератора данным образом:
	
	cmake -G "Visual Studio 17 2022" -A x64
			^
			|
		название генератора

-A x64 указывает на сборку для 64-битной архитектуры.


5. Сборка проекта

    Выполните команду для сборки:

    cmake --build .

        Эта команда создаст исполняемый файл программы. Если возникнет ошибка, проверьте, установлены ли 
CUDA Toolkit и компилятор C++.

6. Запуск программы

    После сборки исполняемый файл будет создан в папке Debug (или рядом с другими файлами). 
Чтобы запустить программу:

    ./Debug/CudaEntropy.exe output.csv

        В этом примере output.csv — это имя файла, куда будет сохранён результат. Вы можете указать любое
 другое имя файла.

Дополнительные пояснения:

    Что делает программа? Программа вычисляет гистограмму и энтропию для заданных данных. 
Она использует мощность вашей видеокарты (GPU) для ускорения вычислений.

    Что делать, если что-то пошло не так?
        Убедитесь, что все зависимости (CUDA Toolkit, CMake, компилятор C++) установлены.
        Проверьте, что ваш GPU поддерживает CUDA (минимальная версия — Compute Capability 3.0).
        Проверьте пути к программам nvcc, cmake и компилятору C++.